@page "/"

@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@using TicTacToeGame.Domain.Repositories
@using TicTacToeGame.Domain.Models
@using TicTacToeGame.Services.GameProcessService


@inject AuthenticationStateProvider _authenticationStateProvider
@inject NavigationManager NavigationManager
@inject GameRepository GameRepository
@inject GameReconnectingService GameReconnectingService

@rendermode InteractiveServer
@attribute [Authorize]

<h1 style="text-align: center;">Tic Tac Toe Game</h1>

<div style="display: flex; justify-content: center; margin-top: 20px;">
    <div class="nav-item px-3">
        <NavLink class="nav-link" href="host-room">
            <button style="margin-right: 10px; padding: 10px; background-color: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer;">Create Room</button>
        </NavLink>
    </div>
    <div class="nav-item px-3">
        <NavLink class="nav-link" href="join-room">
            <button style="padding: 10px; background-color: #008CBA; color: white; border: none; border-radius: 5px; cursor: pointer;" >Connect to Room</button>
        </NavLink>
    </div>
</div>

@code {
    // Authentication data
    private AuthenticationState authState;
    private ClaimsPrincipal? user;

    private TicTacToeGame.Domain.Models.Game ExistingGame;

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        ClaimsPrincipal? user = authState.User;

        string userId = user.Claims.First().Value.ToString();
      
        GameReconnectingService.RecconectPlayer(userId);
    }
}
