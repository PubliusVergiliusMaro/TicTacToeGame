@implements IDisposable

@inject NavigationManager NavigationManager

<div class="navbar navbar-dark fixed-top" style="position:absolute;width:10%;">
    <div class="container-fluid">
        <nav class="flex-column">
            <AuthorizeView>
                <Authorized>
                    <div class="nav-item px-3" style="margin: 55px 0px 0px 0px;">
                        <form action="Account/Logout" method="post">
                            <AntiforgeryToken />
                            <input type="hidden" name="ReturnUrl" value="Account/Login" />
                            <button type="submit" class="nav-link" style="color: white;width:100px;background-color: #d5d5d5;">
                                <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                            </button>
                        </form>
                    </div>
                </Authorized>
            </AuthorizeView>
        </nav>
    </div>
</div>
<style>
    .content {
        padding: 0;
    }

    @@media (min-width: 641px) {
        .top-row[b-scnx1frxwo],
        article[b-scnx1frxwo] {
            padding-left: 0rem !important;
            padding-right: 0rem !important;
        }
    }
</style>
@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}